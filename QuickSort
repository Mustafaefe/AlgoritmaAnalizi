/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package quicksort;

import java.util.Random;

/**
 *
 * @author BMB
 */
public class QuickSort {

    private int array[];
    private int length;
    private int karsilastirmaSayisi=0, DeğiştirmeSayisi=0;
    private boolean girdim = false;
 
    public void sort(int[] inputArr) {
         
        if (inputArr == null || inputArr.length == 0) {
            return;
        }
        this.array = inputArr;
        length = inputArr.length;
        quickSort(0, length - 1);
    }
 
    private void quickSort(int lowerIndex, int higherIndex) {
         
        int i = lowerIndex;
        int j = higherIndex;
        // calculate pivot number, I am taking pivot as middle index number
        int pivot = array[lowerIndex+(higherIndex-lowerIndex)/2];
        // Divide into two arrays
        while (i <= j) {
            /**
             * In each iteration, we will identify a number from left side which
             * is greater then the pivot value, and also we will identify a number
             * from right side which is less then the pivot value. Once the search
             * is done, then we exchange both numbers.
             */
            while (array[i] < pivot) {
                karsilastirmaSayisi++;
                girdim = true;
                i++;
            }
            if(!girdim){
                karsilastirmaSayisi++;
                girdim = false;
            }
            while (array[j] > pivot) {
                karsilastirmaSayisi++;
                girdim = true;
                j--;
            }
            if(!girdim){
                karsilastirmaSayisi++; 
                girdim = false;
            }
                
            if (i <= j) {
                exchangeNumbers(i, j);
                
                //move index to next position on both sides
                i++;
                j--;
            }
        }
        // call quickSort() method recursively
        if (lowerIndex < j)
            quickSort(lowerIndex, j);
        if (i < higherIndex)
            quickSort(i, higherIndex);
    }
 
    private void exchangeNumbers(int i, int j) {
        int temp = array[i];
        array[i] = array[j];
        array[j] = temp;
        DeğiştirmeSayisi++;
    }
     
    public static void main(String a[]){
         
        QuickSort sorter = new QuickSort();
        int[] input = new int[90000];
        for(int i=0; i<90000; i++){
            Random r = new Random();
            input[i] = r.nextInt(100);
        }
        long sure1= System.currentTimeMillis();
        sorter.sort(input);
        long sure2= System.currentTimeMillis();
        /*for(int i:input){
            System.out.print(i);
            System.out.print(" ");
        }*/
        System.out.println("");
        System.out.println("Kar: "+ sorter.karsilastirmaSayisi);
        System.out.println("Deş: "+ sorter.DeğiştirmeSayisi);
        System.out.println("Geçen Süre : "+ (sure2-sure1));
    }
}
